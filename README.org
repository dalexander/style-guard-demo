* What?
The intention here is to get source code formatting automatically
checked and guaranteed before checkin.

* Why?
- Automate style-guide compliance to avoid squabbles
- Post-checkin reformatting binges mess up history.  It's best to get
  it right from the get-go.


* How?
See the tools:
  - ~tools/check-formatting --staged~ for fast style-checking of
    changed files, in a git commit/push hook;
  - ~tools/check-formatting --all~ for slower style-checking of everything
  - ~tools/format-all~ to format everything

To enable the checking as a pre-commit hook, place the following in
~.git/hooks/pre-commit~ (and make that file executable):
#+BEGIN_SRC sh
#!/bin/bash
./tools/check-formatting --staged
#+END_SRC


* Tips
- We should *not* reformat bundled third-party code as it will make it
  difficult to diff with upstream.  Put such code in a subdirectory
  with its own .clangformat file containing: "BasedOnStyle: None" to
  disable formatting.

- If clang-format mangles something (for example, a comment block with
  ASCII art or significant whitespace), you can protect a block using
  ~// clang-format off~ and then ~// clang-format on~.
